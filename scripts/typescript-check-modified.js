#!/usr/bin/env node

/**
 * TypeScript Check for Modified Files
 * Checks TypeScript compilation for only modified files
 */

const { execSync } = require("child_process")
const fs = require("fs")
const path = require("path")

function getModifiedTypeScriptFiles() {
  try {
    // Get staged files
    const staged = execSync("git diff --cached --name-only --diff-filter=ACM", { encoding: "utf8" })
      .split("\n")
      .filter((f) => f.trim() && f.match(/\.(ts|tsx)$/))

    // Get unstaged files
    const unstaged = execSync("git diff --name-only --diff-filter=ACM", { encoding: "utf8" })
      .split("\n")
      .filter((f) => f.trim() && f.match(/\.(ts|tsx)$/))

    // Get untracked files
    const untracked = execSync("git ls-files --others --exclude-standard", { encoding: "utf8" })
      .split("\n")
      .filter((f) => f.trim() && f.match(/\.(ts|tsx)$/))

    const allFiles = [...new Set([...staged, ...unstaged, ...untracked])]
    return allFiles.filter((file) => fs.existsSync(file))
  } catch (error) {
    console.warn("‚ö†Ô∏è Git parancs sikertelen, teljes TypeScript ellen≈ërz√©s...")
    return []
  }
}

function runTypeScriptCheck(files) {
  try {
    if (files.length === 0) {
      console.log("‚úÖ Nincs ellen≈ërizend≈ë TypeScript f√°jl.")
      return true
    }

    console.log(`üîç TypeScript ellen≈ërz√©s ${files.length} f√°jlon...`)
    files.forEach((file) => console.log(`   - ${file}`))

    // Run TypeScript compiler check
    const fileList = files.join(" ")
    execSync(`npx tsc --noEmit --skipLibCheck ${fileList}`, {
      stdio: "inherit",
      encoding: "utf8",
    })

    console.log("‚úÖ TypeScript ellen≈ërz√©s sikeres")
    return true
  } catch (error) {
    console.error("‚ùå TypeScript hib√°k tal√°lhat√≥k")
    return false
  }
}

function main() {
  console.log("üöÄ TypeScript ellen≈ërz√©s ind√≠t√°sa (csak m√≥dos√≠tott f√°jlok)...\n")

  const modifiedFiles = getModifiedTypeScriptFiles()
  const success = runTypeScriptCheck(modifiedFiles)

  if (success) {
    console.log("\n‚úÖ TypeScript ellen≈ërz√©s sikeresen lez√°rult!")
    process.exit(0)
  } else {
    console.log("\n‚ùå TypeScript ellen≈ërz√©s hib√°kkal z√°rult!")
    console.log("üí° Jav√≠t√°s: Ellen≈ërizd a TypeScript hib√°kat √©s jav√≠tsd ≈ëket")
    process.exit(1)
  }
}

// Only run if this file is executed directly
if (require.main === module) {
  main()
}

module.exports = { getModifiedTypeScriptFiles, runTypeScriptCheck }
